on:
  push:
    tags:
    - 'v*.*'

name: Release

jobs:

  build-ubuntu:
    runs-on: ubuntu-20.04
    steps:

    - uses: actions/checkout@v2

    - name: Set environment variables
      id: vars
      run: |
        echo "::set-output name=ref::$(echo ${{ github.ref }} | sed -e's#.*/##')"

    - name: Dependency packages (apt)
      run: |
        sudo apt update
        sudo apt -y install git python3-pip zip

    - name: Dependency packages (pip)
      run: python3 -m pip install --user bitarray crcmod pyserial requests

    - name: Build dist
      run: make dist

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: greaseweazle-tools.ci.${{ steps.vars.outputs.ref }}
        path: greaseweazle-tools-${{ steps.vars.outputs.ref }}.zip

  build-windows:
    runs-on: windows-2019
    steps:

    - uses: actions/checkout@v2

    - name: Set environment variables
      id: vars
      run: |
        echo "::set-output name=ref::$(echo ${{ github.ref }} | sed -e's#.*/##')"

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        architecture: x86

    - name: Dependency packages (pip)
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --user bitarray crcmod pyserial requests cx_Freeze

    - name: Build dist
      run: make windist

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: greaseweazle-tools.ci.${{ steps.vars.outputs.ref }}
        path: greaseweazle-tools-${{ steps.vars.outputs.ref }}-win.zip

  finalise:
    needs: [build-ubuntu, build-windows]
    runs-on: ubuntu-20.04
    steps:

    - uses: actions/checkout@v2

    - name: Set environment variables
      id: vars
      run: |
        echo "::set-output name=ref::$(echo ${{ github.ref }} | sed -e's#.*/##')"

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: greaseweazle-tools.ci.${{ steps.vars.outputs.ref }}

    - name: Remove 64-bit DLLS
      run: |
        P=greaseweazle-tools
        V=${{ steps.vars.outputs.ref }}
        unzip $P-$V-win.zip
        find $P-$V -name 'api-ms-*' | xargs rm -f
        find $P-$V/lib -name 'python*.dll' | xargs rm -f
        find $P-$V/lib -name 'vcruntime140.dll' | xargs rm -f
        rm $P-$V-win.zip
        zip -r $P-$V-win.zip $P-$V

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Greaseweazle Tools ${{ steps.vars.outputs.ref }}
        body: "[**Release Notes:**](https://github.com/keirf/greaseweazle/blob/master/RELEASE_NOTES)"
        draft: false
        prerelease: false

    - name: Upload Release Asset (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: greaseweazle-tools-${{ steps.vars.outputs.ref }}-win.zip
        asset_name: greaseweazle-tools-${{ steps.vars.outputs.ref }}-win.zip
        asset_content_type: application/zip

    - name: Upload Release Asset (Other)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: greaseweazle-tools-${{ steps.vars.outputs.ref }}.zip
        asset_name: greaseweazle-tools-${{ steps.vars.outputs.ref }}.zip
        asset_content_type: application/zip
