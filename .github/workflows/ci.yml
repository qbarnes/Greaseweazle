name: CI

on: [push, pull_request]

jobs:

  build-ubuntu:
    runs-on: ubuntu-20.04
    steps:

    - uses: actions/checkout@v2

    - name: Set environment variables
      id: vars
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Dependency packages (apt)
      run: |
        sudo apt update
        sudo apt -y install git python3-pip zip

    - name: Dependency packages (pip)
      run: python3 -m pip install --user bitarray crcmod pyserial requests

    - name: Build dist
      run: |
        export P=greaseweazle-tools
        export V=${{ steps.vars.outputs.sha_short }}
        make dist
        mkdir -p _cidist
        rm $P-v*.zip
        mv $P-v* $P-$V
        rm $P-$V/RELEASE_NOTES
        git rev-parse HEAD >$P-$V/COMMIT
        echo "commit = '$(git rev-parse HEAD)'" >>$P-$V/scripts/greaseweazle/version.py 
        zip -r $P-$V.zip $P-$V
        mv $P-$V.zip _cidist/

    - name: Build debug dist
      run: |
        export P=greaseweazle-tools
        export V=${{ steps.vars.outputs.sha_short }}-debug
        env debug=y make dist
        rm $P-v*.zip
        mv $P-v* $P-$V
        rm $P-$V/RELEASE_NOTES
        git rev-parse HEAD >$P-$V/COMMIT
        echo debug >>$P-$V/COMMIT
        echo "commit = '$(git rev-parse HEAD)'" >>$P-$V/scripts/greaseweazle/version.py 
        zip -r $P-$V.zip $P-$V
        mv $P-$V.zip _cidist/

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: greaseweazle-tools.ci.${{ steps.vars.outputs.sha_short }}
        path: _cidist

  build-windows:
    needs: build-ubuntu
    runs-on: windows-2019
    steps:

    - uses: actions/checkout@v2

    - name: Set environment variables
      id: vars
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Download Ubuntu build
      uses: actions/download-artifact@v2
      with:
        name: greaseweazle-tools.ci.${{ steps.vars.outputs.sha_short }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        architecture: x86

    - name: Dependency packages (pip)
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --user bitarray crcmod pyserial requests cx_Freeze

    - name: Build dist
      run: |
        make windist VER=${{ steps.vars.outputs.sha_short }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: greaseweazle-tools.ci.${{ steps.vars.outputs.sha_short }}
        path: greaseweazle-tools-${{ steps.vars.outputs.sha_short }}-win.zip

  finalise:
    needs: build-windows
    runs-on: ubuntu-20.04
    steps:

    - uses: actions/checkout@v2

    - name: Set environment variables
      id: vars
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: greaseweazle-tools.ci.${{ steps.vars.outputs.sha_short }}

    - name: Remove 64-bit DLLS
      run: |
        export P=greaseweazle-tools
        export V=${{ steps.vars.outputs.sha_short }}
        unzip $P-$V-win.zip
        find . -name 'api-ms-*' | xargs rm -f
        find $P-$V/lib -name 'python*.dll' | xargs rm -f
        find $P-$V/lib -name 'vcruntime140.dll' | xargs rm -f
        rm $P-$V-win.zip
        zip -r $P-$V-win.zip $P-$V

    - name: Upload finalised artifacts
      uses: actions/upload-artifact@v2
      with:
        name: greaseweazle-tools.ci.${{ steps.vars.outputs.sha_short }}
        path: greaseweazle-tools-${{ steps.vars.outputs.sha_short }}-win.zip
